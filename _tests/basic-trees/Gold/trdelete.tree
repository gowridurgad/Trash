( grammarSpec int:0..77
  ( grammarDecl int:0..3
    ( grammarType int:0..0
      ( GRAMMAR int:0..0 text:grammar tt:19 chnl:DEFAULT_TOKEN_CHANNEL text:grammar chnl:DEFAULT_TOKEN_CHANNEL l:1 c:0 si:0 ei:6 ti:0
    ) ) 
    ( identifier int:2..2
      ( TOKEN_REF int:2..2 text:Expression tt:1 chnl:DEFAULT_TOKEN_CHANNEL text:Expression chnl:DEFAULT_TOKEN_CHANNEL l:1 c:8 si:8 ei:17 ti:2
    ) ) 
    ( SEMI int:3..3 text:; tt:32 chnl:DEFAULT_TOKEN_CHANNEL text:; chnl:DEFAULT_TOKEN_CHANNEL l:1 c:18 si:18 ei:18 ti:3
  ) ) 
  ( rules int:5..75
    ( ruleSpec int:5..9
      ( parserRuleSpec int:5..9
        ( RULE_REF int:5..5 text:s tt:2 chnl:DEFAULT_TOKEN_CHANNEL text:s chnl:DEFAULT_TOKEN_CHANNEL l:2 c:0 si:20 ei:20 ti:5
        ) 
        ( COLON int:7..7 text:: tt:29 chnl:DEFAULT_TOKEN_CHANNEL text:: chnl:DEFAULT_TOKEN_CHANNEL l:2 c:2 si:22 ei:22 ti:7
        ) 
        ( ruleBlock int:9..9
          ( ruleAltList int:9..9
            ( labeledAlt int:9..9
              ( alternative int:9..9
                ( element int:9..9
                  ( atom int:9..9
                    ( ruleref int:9..9
                      ( RULE_REF int:9..9 text:e tt:2 chnl:DEFAULT_TOKEN_CHANNEL text:e chnl:DEFAULT_TOKEN_CHANNEL l:2 c:4 si:24 ei:24 ti:9
        ) ) ) ) ) ) ) ) 
        ( SEMI int:11..11 text:; tt:32 chnl:DEFAULT_TOKEN_CHANNEL text:; chnl:DEFAULT_TOKEN_CHANNEL l:2 c:6 si:26 ei:26 ti:11
        ) 
        ( exceptionGroup int:11..9
    ) ) ) 
    ( ruleSpec int:13..51
      ( parserRuleSpec int:13..51
        ( RULE_REF int:13..13 text:e tt:2 chnl:DEFAULT_TOKEN_CHANNEL text:e chnl:DEFAULT_TOKEN_CHANNEL l:3 c:0 si:28 ei:28 ti:13
        ) 
        ( COLON int:15..15 text:: tt:29 chnl:DEFAULT_TOKEN_CHANNEL text:: chnl:DEFAULT_TOKEN_CHANNEL l:3 c:2 si:30 ei:30 ti:15
        ) 
        ( ruleBlock int:17..51
          ( ruleAltList int:17..51
            ( labeledAlt int:17..25
              ( alternative int:17..25
                ( element int:17..17
                  ( atom int:17..17
                    ( ruleref int:17..17
                      ( RULE_REF int:17..17 text:e tt:2 chnl:DEFAULT_TOKEN_CHANNEL text:e chnl:DEFAULT_TOKEN_CHANNEL l:3 c:4 si:32 ei:32 ti:17
                ) ) ) ) 
                ( element int:19..23
                  ( ebnf int:19..23
                    ( block int:19..23
                      ( LPAREN int:19..19 text:( tt:33 chnl:DEFAULT_TOKEN_CHANNEL text:( chnl:DEFAULT_TOKEN_CHANNEL l:3 c:6 si:34 ei:34 ti:19
                      ) 
                      ( altList int:20..22
                        ( alternative int:20..20
                          ( element int:20..20
                            ( atom int:20..20
                              ( terminal int:20..20
                                ( STRING_LITERAL int:20..20 text:'*' tt:8 chnl:DEFAULT_TOKEN_CHANNEL text:'*' chnl:DEFAULT_TOKEN_CHANNEL l:3 c:7 si:35 ei:37 ti:20
                        ) ) ) ) ) 
                        ( OR int:21..21 text:| tt:45 chnl:DEFAULT_TOKEN_CHANNEL text:| chnl:DEFAULT_TOKEN_CHANNEL l:3 c:10 si:38 ei:38 ti:21
                        ) 
                        ( alternative int:22..22
                          ( element int:22..22
                            ( atom int:22..22
                              ( terminal int:22..22
                                ( STRING_LITERAL int:22..22 text:'/' tt:8 chnl:DEFAULT_TOKEN_CHANNEL text:'/' chnl:DEFAULT_TOKEN_CHANNEL l:3 c:11 si:39 ei:41 ti:22
                      ) ) ) ) ) ) 
                      ( RPAREN int:23..23 text:) tt:34 chnl:DEFAULT_TOKEN_CHANNEL text:) chnl:DEFAULT_TOKEN_CHANNEL l:3 c:14 si:42 ei:42 ti:23
                ) ) ) ) 
                ( element int:25..25
                  ( atom int:25..25
                    ( ruleref int:25..25
                      ( RULE_REF int:25..25 text:e tt:2 chnl:DEFAULT_TOKEN_CHANNEL text:e chnl:DEFAULT_TOKEN_CHANNEL l:3 c:16 si:44 ei:44 ti:25
            ) ) ) ) ) ) 
            ( OR int:27..27 text:| tt:45 chnl:DEFAULT_TOKEN_CHANNEL text:| chnl:DEFAULT_TOKEN_CHANNEL l:3 c:18 si:46 ei:46 ti:27
            ) 
            ( labeledAlt int:29..37
              ( alternative int:29..37
                ( element int:29..29
                  ( atom int:29..29
                    ( ruleref int:29..29
                      ( RULE_REF int:29..29 text:e tt:2 chnl:DEFAULT_TOKEN_CHANNEL text:e chnl:DEFAULT_TOKEN_CHANNEL l:3 c:20 si:48 ei:48 ti:29
                ) ) ) ) 
                ( element int:31..35
                  ( ebnf int:31..35
                    ( block int:31..35
                      ( LPAREN int:31..31 text:( tt:33 chnl:DEFAULT_TOKEN_CHANNEL text:( chnl:DEFAULT_TOKEN_CHANNEL l:3 c:22 si:50 ei:50 ti:31
                      ) 
                      ( altList int:32..34
                        ( alternative int:32..32
                          ( element int:32..32
                            ( atom int:32..32
                              ( terminal int:32..32
                                ( STRING_LITERAL int:32..32 text:'+' tt:8 chnl:DEFAULT_TOKEN_CHANNEL text:'+' chnl:DEFAULT_TOKEN_CHANNEL l:3 c:23 si:51 ei:53 ti:32
                        ) ) ) ) ) 
                        ( OR int:33..33 text:| tt:45 chnl:DEFAULT_TOKEN_CHANNEL text:| chnl:DEFAULT_TOKEN_CHANNEL l:3 c:26 si:54 ei:54 ti:33
                        ) 
                        ( alternative int:34..34
                          ( element int:34..34
                            ( atom int:34..34
                              ( terminal int:34..34
                                ( STRING_LITERAL int:34..34 text:'-' tt:8 chnl:DEFAULT_TOKEN_CHANNEL text:'-' chnl:DEFAULT_TOKEN_CHANNEL l:3 c:27 si:55 ei:57 ti:34
                      ) ) ) ) ) ) 
                      ( RPAREN int:35..35 text:) tt:34 chnl:DEFAULT_TOKEN_CHANNEL text:) chnl:DEFAULT_TOKEN_CHANNEL l:3 c:30 si:58 ei:58 ti:35
                ) ) ) ) 
                ( element int:37..37
                  ( atom int:37..37
                    ( ruleref int:37..37
                      ( RULE_REF int:37..37 text:e tt:2 chnl:DEFAULT_TOKEN_CHANNEL text:e chnl:DEFAULT_TOKEN_CHANNEL l:3 c:32 si:60 ei:60 ti:37
            ) ) ) ) ) ) 
            ( OR int:39..39 text:| tt:45 chnl:DEFAULT_TOKEN_CHANNEL text:| chnl:DEFAULT_TOKEN_CHANNEL l:3 c:34 si:62 ei:62 ti:39
            ) 
            ( labeledAlt int:41..47
              ( alternative int:41..47
                ( element int:41..45
                  ( ebnf int:41..45
                    ( block int:41..45
                      ( LPAREN int:41..41 text:( tt:33 chnl:DEFAULT_TOKEN_CHANNEL text:( chnl:DEFAULT_TOKEN_CHANNEL l:3 c:36 si:64 ei:64 ti:41
                      ) 
                      ( altList int:42..44
                        ( alternative int:42..42
                          ( element int:42..42
                            ( atom int:42..42
                              ( terminal int:42..42
                                ( STRING_LITERAL int:42..42 text:'+' tt:8 chnl:DEFAULT_TOKEN_CHANNEL text:'+' chnl:DEFAULT_TOKEN_CHANNEL l:3 c:37 si:65 ei:67 ti:42
                        ) ) ) ) ) 
                        ( OR int:43..43 text:| tt:45 chnl:DEFAULT_TOKEN_CHANNEL text:| chnl:DEFAULT_TOKEN_CHANNEL l:3 c:40 si:68 ei:68 ti:43
                        ) 
                        ( alternative int:44..44
                          ( element int:44..44
                            ( atom int:44..44
                              ( terminal int:44..44
                                ( STRING_LITERAL int:44..44 text:'-' tt:8 chnl:DEFAULT_TOKEN_CHANNEL text:'-' chnl:DEFAULT_TOKEN_CHANNEL l:3 c:41 si:69 ei:71 ti:44
                      ) ) ) ) ) ) 
                      ( RPAREN int:45..45 text:) tt:34 chnl:DEFAULT_TOKEN_CHANNEL text:) chnl:DEFAULT_TOKEN_CHANNEL l:3 c:44 si:72 ei:72 ti:45
                ) ) ) ) 
                ( element int:47..47
                  ( atom int:47..47
                    ( ruleref int:47..47
                      ( RULE_REF int:47..47 text:e tt:2 chnl:DEFAULT_TOKEN_CHANNEL text:e chnl:DEFAULT_TOKEN_CHANNEL l:3 c:46 si:74 ei:74 ti:47
            ) ) ) ) ) ) 
            ( OR int:49..49 text:| tt:45 chnl:DEFAULT_TOKEN_CHANNEL text:| chnl:DEFAULT_TOKEN_CHANNEL l:3 c:48 si:76 ei:76 ti:49
            ) 
            ( labeledAlt int:51..51
              ( alternative int:51..51
                ( element int:51..51
                  ( atom int:51..51
                    ( terminal int:51..51
                      ( TOKEN_REF int:51..51 text:INT tt:1 chnl:DEFAULT_TOKEN_CHANNEL text:INT chnl:DEFAULT_TOKEN_CHANNEL l:3 c:50 si:78 ei:80 ti:51
        ) ) ) ) ) ) ) ) 
        ( SEMI int:53..53 text:; tt:32 chnl:DEFAULT_TOKEN_CHANNEL text:; chnl:DEFAULT_TOKEN_CHANNEL l:3 c:54 si:82 ei:82 ti:53
        ) 
        ( exceptionGroup int:53..51
    ) ) ) 
    ( ruleSpec int:55..62
      ( lexerRuleSpec int:55..62
        ( TOKEN_REF int:55..55 text:INT tt:1 chnl:DEFAULT_TOKEN_CHANNEL text:INT chnl:DEFAULT_TOKEN_CHANNEL l:4 c:0 si:84 ei:86 ti:55
        ) 
        ( COLON int:57..57 text:: tt:29 chnl:DEFAULT_TOKEN_CHANNEL text:: chnl:DEFAULT_TOKEN_CHANNEL l:4 c:4 si:88 ei:88 ti:57
        ) 
        ( lexerRuleBlock int:59..60
          ( lexerAltList int:59..60
            ( lexerAlt int:59..60
              ( lexerElements int:59..60
                ( lexerElement int:59..60
                  ( lexerAtom int:59..59
                    ( LEXER_CHAR_SET int:59..59 text:[0-9] tt:3 chnl:DEFAULT_TOKEN_CHANNEL text:[0-9] chnl:DEFAULT_TOKEN_CHANNEL l:4 c:6 si:90 ei:94 ti:59
                  ) ) 
                  ( ebnfSuffix int:60..60
                    ( PLUS int:60..60 text:+ tt:44 chnl:DEFAULT_TOKEN_CHANNEL text:+ chnl:DEFAULT_TOKEN_CHANNEL l:4 c:11 si:95 ei:95 ti:60
        ) ) ) ) ) ) ) 
        ( SEMI int:62..62 text:; tt:32 chnl:DEFAULT_TOKEN_CHANNEL text:; chnl:DEFAULT_TOKEN_CHANNEL l:4 c:13 si:97 ei:97 ti:62
    ) ) ) 
    ( ruleSpec int:64..75
      ( lexerRuleSpec int:64..75
        ( TOKEN_REF int:64..64 text:WS tt:1 chnl:DEFAULT_TOKEN_CHANNEL text:WS chnl:DEFAULT_TOKEN_CHANNEL l:5 c:0 si:99 ei:100 ti:64
        ) 
        ( COLON int:66..66 text:: tt:29 chnl:DEFAULT_TOKEN_CHANNEL text:: chnl:DEFAULT_TOKEN_CHANNEL l:5 c:3 si:102 ei:102 ti:66
        ) 
        ( lexerRuleBlock int:68..73
          ( lexerAltList int:68..73
            ( lexerAlt int:68..73
              ( lexerElements int:68..69
                ( lexerElement int:68..69
                  ( lexerAtom int:68..68
                    ( LEXER_CHAR_SET int:68..68 text:[ \\t\\n] tt:3 chnl:DEFAULT_TOKEN_CHANNEL text:[ \\t\\n] chnl:DEFAULT_TOKEN_CHANNEL l:5 c:5 si:104 ei:110 ti:68
                  ) ) 
                  ( ebnfSuffix int:69..69
                    ( PLUS int:69..69 text:+ tt:44 chnl:DEFAULT_TOKEN_CHANNEL text:+ chnl:DEFAULT_TOKEN_CHANNEL l:5 c:12 si:111 ei:111 ti:69
              ) ) ) ) 
              ( lexerCommands int:71..73
                ( RARROW int:71..71 text:-> tt:37 chnl:DEFAULT_TOKEN_CHANNEL text:-> chnl:DEFAULT_TOKEN_CHANNEL l:5 c:14 si:113 ei:114 ti:71
                ) 
                ( lexerCommand int:73..73
                  ( lexerCommandName int:73..73
                    ( identifier int:73..73
                      ( RULE_REF int:73..73 text:skip tt:2 chnl:DEFAULT_TOKEN_CHANNEL text:skip chnl:DEFAULT_TOKEN_CHANNEL l:5 c:17 si:116 ei:119 ti:73
        ) ) ) ) ) ) ) ) 
        ( SEMI int:75..75 text:; tt:32 chnl:DEFAULT_TOKEN_CHANNEL text:; chnl:DEFAULT_TOKEN_CHANNEL l:5 c:22 si:121 ei:121 ti:75
  ) ) ) ) 
  ( EOF int:77..77 text:<EOF> tt:-1 chnl:DEFAULT_TOKEN_CHANNEL text:<EOF> chnl:DEFAULT_TOKEN_CHANNEL l:6 c:0 si:123 ei:122 ti:77
) ) 

[
  {
    "FileName": "Expression.g4",
    "Text": "grammar Expression;\ns : e ;\ne : e (\u0027*\u0027|\u0027/\u0027) e | e (\u0027\u002B\u0027|\u0027-\u0027) e | (\u0027\u002B\u0027|\u0027-\u0027) e | INT ;\nINT : [0-9]\u002B ;\nWS : [ \\t\\n]\u002B -\u003E skip ;\n",
    "IdentityOfParser": "ANTLRv4Parser.g4",
    "IdentityOfLexer": "ANTLRv4Lexer.g4",
    "Tokens": [
      19,
      0,
      6,
      1,
      0,
      0,
      53,
      7,
      7,
      1,
      7,
      2,
      1,
      8,
      17,
      1,
      8,
      0,
      32,
      18,
      18,
      1,
      18,
      0,
      53,
      19,
      19,
      1,
      19,
      2,
      2,
      20,
      20,
      2,
      0,
      0,
      53,
      21,
      21,
      2,
      1,
      2,
      29,
      22,
      22,
      2,
      2,
      0,
      53,
      23,
      23,
      2,
      3,
      2,
      2,
      24,
      24,
      2,
      4,
      0,
      53,
      25,
      25,
      2,
      5,
      2,
      32,
      26,
      26,
      2,
      6,
      0,
      53,
      27,
      27,
      2,
      7,
      2,
      2,
      28,
      28,
      3,
      0,
      0,
      53,
      29,
      29,
      3,
      1,
      2,
      29,
      30,
      30,
      3,
      2,
      0,
      53,
      31,
      31,
      3,
      3,
      2,
      2,
      32,
      32,
      3,
      4,
      0,
      53,
      33,
      33,
      3,
      5,
      2,
      33,
      34,
      34,
      3,
      6,
      0,
      8,
      35,
      37,
      3,
      7,
      0,
      45,
      38,
      38,
      3,
      10,
      0,
      8,
      39,
      41,
      3,
      11,
      0,
      34,
      42,
      42,
      3,
      14,
      0,
      53,
      43,
      43,
      3,
      15,
      2,
      2,
      44,
      44,
      3,
      16,
      0,
      53,
      45,
      45,
      3,
      17,
      2,
      45,
      46,
      46,
      3,
      18,
      0,
      53,
      47,
      47,
      3,
      19,
      2,
      2,
      48,
      48,
      3,
      20,
      0,
      53,
      49,
      49,
      3,
      21,
      2,
      33,
      50,
      50,
      3,
      22,
      0,
      8,
      51,
      53,
      3,
      23,
      0,
      45,
      54,
      54,
      3,
      26,
      0,
      8,
      55,
      57,
      3,
      27,
      0,
      34,
      58,
      58,
      3,
      30,
      0,
      53,
      59,
      59,
      3,
      31,
      2,
      2,
      60,
      60,
      3,
      32,
      0,
      53,
      61,
      61,
      3,
      33,
      2,
      45,
      62,
      62,
      3,
      34,
      0,
      53,
      63,
      63,
      3,
      35,
      2,
      33,
      64,
      64,
      3,
      36,
      0,
      8,
      65,
      67,
      3,
      37,
      0,
      45,
      68,
      68,
      3,
      40,
      0,
      8,
      69,
      71,
      3,
      41,
      0,
      34,
      72,
      72,
      3,
      44,
      0,
      53,
      73,
      73,
      3,
      45,
      2,
      2,
      74,
      74,
      3,
      46,
      0,
      53,
      75,
      75,
      3,
      47,
      2,
      45,
      76,
      76,
      3,
      48,
      0,
      53,
      77,
      77,
      3,
      49,
      2,
      1,
      78,
      80,
      3,
      50,
      0,
      53,
      81,
      81,
      3,
      53,
      2,
      32,
      82,
      82,
      3,
      54,
      0,
      53,
      83,
      83,
      3,
      55,
      2,
      1,
      84,
      86,
      4,
      0,
      0,
      53,
      87,
      87,
      4,
      3,
      2,
      29,
      88,
      88,
      4,
      4,
      0,
      53,
      89,
      89,
      4,
      5,
      2,
      3,
      90,
      94,
      4,
      6,
      0,
      44,
      95,
      95,
      4,
      11,
      0,
      53,
      96,
      96,
      4,
      12,
      2,
      32,
      97,
      97,
      4,
      13,
      0,
      53,
      98,
      98,
      4,
      14,
      2,
      1,
      99,
      100,
      5,
      0,
      0,
      53,
      101,
      101,
      5,
      2,
      2,
      29,
      102,
      102,
      5,
      3,
      0,
      53,
      103,
      103,
      5,
      4,
      2,
      3,
      104,
      110,
      5,
      5,
      0,
      44,
      111,
      111,
      5,
      12,
      0,
      53,
      112,
      112,
      5,
      13,
      2,
      37,
      113,
      114,
      5,
      14,
      0,
      53,
      115,
      115,
      5,
      16,
      2,
      2,
      116,
      119,
      5,
      17,
      0,
      53,
      120,
      120,
      5,
      21,
      2,
      32,
      121,
      121,
      5,
      22,
      0,
      53,
      122,
      122,
      5,
      23,
      2,
      -1,
      123,
      122,
      6,
      0,
      0
    ],
    "ModeNames": [
      "DEFAULT_MODE",
      "Argument",
      "TargetLanguageAction",
      "LexerCharSet"
    ],
    "ChannelNames": [
      "DEFAULT_TOKEN_CHANNEL",
      "HIDDEN",
      "OFF_CHANNEL",
      "COMMENT"
    ],
    "LiteralNames": [
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      "\u0027import\u0027",
      "\u0027fragment\u0027",
      "\u0027lexer\u0027",
      "\u0027parser\u0027",
      "\u0027grammar\u0027",
      "\u0027protected\u0027",
      "\u0027public\u0027",
      "\u0027private\u0027",
      "\u0027returns\u0027",
      "\u0027locals\u0027",
      "\u0027throws\u0027",
      "\u0027catch\u0027",
      "\u0027finally\u0027",
      "\u0027mode\u0027"
    ],
    "SymbolicNames": [
      null,
      "TOKEN_REF",
      "RULE_REF",
      "LEXER_CHAR_SET",
      "DOC_COMMENT",
      "BLOCK_COMMENT",
      "LINE_COMMENT",
      "INT",
      "STRING_LITERAL",
      "UNTERMINATED_STRING_LITERAL",
      "BEGIN_ARGUMENT",
      "BEGIN_ACTION",
      "OPTIONS",
      "TOKENS",
      "CHANNELS",
      "IMPORT",
      "FRAGMENT",
      "LEXER",
      "PARSER",
      "GRAMMAR",
      "PROTECTED",
      "PUBLIC",
      "PRIVATE",
      "RETURNS",
      "LOCALS",
      "THROWS",
      "CATCH",
      "FINALLY",
      "MODE",
      "COLON",
      "COLONCOLON",
      "COMMA",
      "SEMI",
      "LPAREN",
      "RPAREN",
      "LBRACE",
      "RBRACE",
      "RARROW",
      "LT",
      "GT",
      "ASSIGN",
      "QUESTION",
      "STAR",
      "PLUS_ASSIGN",
      "PLUS",
      "OR",
      "DOLLAR",
      "RANGE",
      "DOT",
      "AT",
      "POUND",
      "NOT",
      "ID",
      "WS",
      "ERRCHAR",
      "END_ARGUMENT",
      "UNTERMINATED_ARGUMENT",
      "ARGUMENT_CONTENT",
      "END_ACTION",
      "UNTERMINATED_ACTION",
      "ACTION_CONTENT",
      "UNTERMINATED_CHAR_SET"
    ],
    "LexerRuleNames": [
      "DOC_COMMENT",
      "BLOCK_COMMENT",
      "LINE_COMMENT",
      "INT",
      "STRING_LITERAL",
      "UNTERMINATED_STRING_LITERAL",
      "BEGIN_ARGUMENT",
      "BEGIN_ACTION",
      "OPTIONS",
      "TOKENS",
      "CHANNELS",
      "WSNLCHARS",
      "IMPORT",
      "FRAGMENT",
      "LEXER",
      "PARSER",
      "GRAMMAR",
      "PROTECTED",
      "PUBLIC",
      "PRIVATE",
      "RETURNS",
      "LOCALS",
      "THROWS",
      "CATCH",
      "FINALLY",
      "MODE",
      "COLON",
      "COLONCOLON",
      "COMMA",
      "SEMI",
      "LPAREN",
      "RPAREN",
      "LBRACE",
      "RBRACE",
      "RARROW",
      "LT",
      "GT",
      "ASSIGN",
      "QUESTION",
      "STAR",
      "PLUS_ASSIGN",
      "PLUS",
      "OR",
      "DOLLAR",
      "RANGE",
      "DOT",
      "AT",
      "POUND",
      "NOT",
      "ID",
      "WS",
      "ERRCHAR",
      "Ws",
      "Hws",
      "Vws",
      "BlockComment",
      "DocComment",
      "LineComment",
      "EscSeq",
      "EscAny",
      "UnicodeEsc",
      "DecimalNumeral",
      "HexDigit",
      "DecDigit",
      "BoolLiteral",
      "CharLiteral",
      "SQuoteLiteral",
      "DQuoteLiteral",
      "USQuoteLiteral",
      "NameChar",
      "NameStartChar",
      "Int",
      "Esc",
      "Colon",
      "DColon",
      "SQuote",
      "DQuote",
      "LParen",
      "RParen",
      "LBrace",
      "RBrace",
      "LBrack",
      "RBrack",
      "RArrow",
      "Lt",
      "Gt",
      "Equal",
      "Question",
      "Star",
      "Plus",
      "PlusAssign",
      "Underscore",
      "Pipe",
      "Dollar",
      "Comma",
      "Semi",
      "Dot",
      "Range",
      "At",
      "Pound",
      "Tilde",
      "NESTED_ARGUMENT",
      "ARGUMENT_ESCAPE",
      "ARGUMENT_STRING_LITERAL",
      "ARGUMENT_CHAR_LITERAL",
      "END_ARGUMENT",
      "UNTERMINATED_ARGUMENT",
      "ARGUMENT_CONTENT",
      "NESTED_ACTION",
      "ACTION_ESCAPE",
      "ACTION_STRING_LITERAL",
      "ACTION_CHAR_LITERAL",
      "ACTION_DOC_COMMENT",
      "ACTION_BLOCK_COMMENT",
      "ACTION_LINE_COMMENT",
      "END_ACTION",
      "UNTERMINATED_ACTION",
      "ACTION_CONTENT",
      "LEXER_CHAR_SET_BODY",
      "LEXER_CHAR_SET",
      "UNTERMINATED_CHAR_SET",
      "Id"
    ],
    "TokenTypeMap": [
      "TOKEN_REF",
      1,
      "RULE_REF",
      2,
      "LEXER_CHAR_SET",
      3,
      "DOC_COMMENT",
      4,
      "BLOCK_COMMENT",
      5,
      "LINE_COMMENT",
      6,
      "INT",
      7,
      "STRING_LITERAL",
      8,
      "UNTERMINATED_STRING_LITERAL",
      9,
      "BEGIN_ARGUMENT",
      10,
      "BEGIN_ACTION",
      11,
      "OPTIONS",
      12,
      "TOKENS",
      13,
      "CHANNELS",
      14,
      "\u0027import\u0027",
      15,
      "IMPORT",
      15,
      "\u0027fragment\u0027",
      16,
      "FRAGMENT",
      16,
      "\u0027lexer\u0027",
      17,
      "LEXER",
      17,
      "\u0027parser\u0027",
      18,
      "PARSER",
      18,
      "\u0027grammar\u0027",
      19,
      "GRAMMAR",
      19,
      "\u0027protected\u0027",
      20,
      "PROTECTED",
      20,
      "\u0027public\u0027",
      21,
      "PUBLIC",
      21,
      "\u0027private\u0027",
      22,
      "PRIVATE",
      22,
      "\u0027returns\u0027",
      23,
      "RETURNS",
      23,
      "\u0027locals\u0027",
      24,
      "LOCALS",
      24,
      "\u0027throws\u0027",
      25,
      "THROWS",
      25,
      "\u0027catch\u0027",
      26,
      "CATCH",
      26,
      "\u0027finally\u0027",
      27,
      "FINALLY",
      27,
      "\u0027mode\u0027",
      28,
      "MODE",
      28,
      "COLON",
      29,
      "COLONCOLON",
      30,
      "COMMA",
      31,
      "SEMI",
      32,
      "LPAREN",
      33,
      "RPAREN",
      34,
      "LBRACE",
      35,
      "RBRACE",
      36,
      "RARROW",
      37,
      "LT",
      38,
      "GT",
      39,
      "ASSIGN",
      40,
      "QUESTION",
      41,
      "STAR",
      42,
      "PLUS_ASSIGN",
      43,
      "PLUS",
      44,
      "OR",
      45,
      "DOLLAR",
      46,
      "RANGE",
      47,
      "DOT",
      48,
      "AT",
      49,
      "POUND",
      50,
      "NOT",
      51,
      "ID",
      52,
      "WS",
      53,
      "ERRCHAR",
      54,
      "END_ARGUMENT",
      55,
      "UNTERMINATED_ARGUMENT",
      56,
      "ARGUMENT_CONTENT",
      57,
      "END_ACTION",
      58,
      "UNTERMINATED_ACTION",
      59,
      "ACTION_CONTENT",
      60,
      "UNTERMINATED_CHAR_SET",
      61,
      "EOF",
      -1
    ],
    "ParserRuleNames": [
      "grammarSpec",
      "grammarDecl",
      "grammarType",
      "prequelConstruct",
      "optionsSpec",
      "option",
      "optionValue",
      "delegateGrammars",
      "delegateGrammar",
      "tokensSpec",
      "channelsSpec",
      "idList",
      "action_",
      "actionScopeName",
      "actionBlock",
      "argActionBlock",
      "modeSpec",
      "rules",
      "ruleSpec",
      "parserRuleSpec",
      "exceptionGroup",
      "exceptionHandler",
      "finallyClause",
      "rulePrequel",
      "ruleReturns",
      "throwsSpec",
      "localsSpec",
      "ruleAction",
      "ruleModifiers",
      "ruleModifier",
      "ruleBlock",
      "ruleAltList",
      "labeledAlt",
      "lexerRuleSpec",
      "lexerRuleBlock",
      "lexerAltList",
      "lexerAlt",
      "lexerElements",
      "lexerElement",
      "labeledLexerElement",
      "lexerBlock",
      "lexerCommands",
      "lexerCommand",
      "lexerCommandName",
      "lexerCommandExpr",
      "altList",
      "alternative",
      "element",
      "labeledElement",
      "ebnf",
      "blockSuffix",
      "ebnfSuffix",
      "lexerAtom",
      "atom",
      "notSet",
      "blockSet",
      "setElement",
      "block",
      "ruleref",
      "characterRange",
      "terminal",
      "elementOptions",
      "elementOption",
      "identifier"
    ],
    "Nodes": [
      0,
      0,
      1,
      1,
      2,
      2,
      3,
      1000000,
      2,
      63,
      5,
      1000002,
      2,
      1000003,
      1,
      17,
      8,
      18,
      9,
      19,
      10,
      1000005,
      10,
      1000007,
      10,
      30,
      13,
      31,
      14,
      32,
      15,
      46,
      16,
      47,
      17,
      53,
      18,
      58,
      19,
      1000009,
      10,
      1000011,
      10,
      20,
      8,
      18,
      23,
      19,
      24,
      1000013,
      24,
      1000015,
      24,
      30,
      27,
      31,
      28,
      32,
      29,
      46,
      30,
      47,
      31,
      53,
      32,
      58,
      33,
      1000017,
      30,
      47,
      35,
      49,
      36,
      57,
      37,
      1000019,
      37,
      45,
      39,
      46,
      40,
      47,
      41,
      53,
      42,
      60,
      43,
      1000020,
      39,
      1000021,
      39,
      46,
      46,
      47,
      47,
      53,
      48,
      60,
      49,
      1000022,
      37,
      1000023,
      30,
      47,
      52,
      53,
      53,
      58,
      54,
      1000025,
      28,
      1000027,
      28,
      32,
      57,
      46,
      58,
      47,
      59,
      53,
      60,
      58,
      61,
      1000029,
      58,
      47,
      63,
      49,
      64,
      57,
      65,
      1000031,
      65,
      45,
      67,
      46,
      68,
      47,
      69,
      53,
      70,
      60,
      71,
      1000032,
      67,
      1000033,
      67,
      46,
      74,
      47,
      75,
      53,
      76,
      60,
      77,
      1000034,
      65,
      1000035,
      58,
      47,
      80,
      53,
      81,
      58,
      82,
      1000037,
      28,
      1000039,
      28,
      32,
      85,
      46,
      86,
      47,
      87,
      49,
      88,
      57,
      89,
      1000041,
      89,
      45,
      91,
      46,
      92,
      47,
      93,
      53,
      94,
      60,
      95,
      1000042,
      91,
      1000043,
      91,
      46,
      98,
      47,
      99,
      53,
      100,
      60,
      101,
      1000044,
      89,
      1000045,
      86,
      47,
      104,
      53,
      105,
      58,
      106,
      1000047,
      28,
      1000049,
      28,
      32,
      109,
      46,
      110,
      47,
      111,
      53,
      112,
      60,
      113,
      1000051,
      24,
      1000053,
      24,
      20,
      8,
      18,
      117,
      33,
      118,
      1000055,
      118,
      1000057,
      118,
      34,
      121,
      35,
      122,
      36,
      123,
      37,
      124,
      38,
      125,
      52,
      126,
      1000059,
      125,
      51,
      128,
      1000060,
      118,
      1000062,
      8,
      18,
      131,
      33,
      132,
      1000064,
      132,
      1000066,
      132,
      34,
      135,
      35,
      136,
      36,
      137,
      37,
      138,
      38,
      139,
      52,
      140,
      1000068,
      139,
      51,
      142,
      1000069,
      137,
      41,
      144,
      1000071,
      144,
      42,
      146,
      43,
      147,
      63,
      148,
      1000073,
      132,
      1000075,
      1,
      1000077
    ]
  }
]
