abbParser.g4 has 1 useless parentheses.
Type 1 errors:
[{"FileName":"abbParser.g4","Text":"parser grammar abbParser;\n\noptions { tokenVocab = abbLexer; }\n\n/*\n    This grammar is still in development.\n    In the current state, it is only able to parse .sys-files and read the given declarations.\n*/\n/*\n    This file is the grammar for the ABB RAPID Robot Language.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see \u003Chttp://www.gnu.org/licenses/\u003E.\n*/\n/*\nAntlr4 port by Tom Everett, 2016\n\nQuestion mark stands for: zero or one\nPlus stands for: one or more\nStar stands for: zero or more\n\n*/\n\nmodule\n    : moduleData EOF\n    ;\n\nmoduleData\n    : MODULE moduleName NEWLINE\n      dataList\n      NEWLINE*\n      ENDMODULE\n    ;\n\nmoduleName\n    : IDENTIFIER\n    | procCall\n    ;\n\ndataList\n    : (NEWLINE\n    | declaration NEWLINE\n    | procedure NEWLINE)*\n    ;\n\nprocedure\n    : PROC procCall NEWLINE\n      (functionCall NEWLINE)*\n    ENDPROC\n    ;\n\nprocCall\n    : procName procParameter?\n    ;\n\nprocName\n    : IDENTIFIER\n    ;\n\nprocParameter\n    : BRACKET_OPEN IDENTIFIER? BRACKET_CLOSE\n    ;\n\nfunctionCall\n    : IDENTIFIER (functionParameter COMMA)* functionParameter SEMICOLON\n    ;\n\nfunctionParameter\n    : ON_CALL\n    | OFF_CALL\n    | primitive\n    | IDENTIFIER\n    ;\n\ndeclaration\n    : init_ type_ IDENTIFIER (EQUALS expression)? SEMICOLON\n    ;\n\ntype_\n    : ( TOOLDATA | WOBJDATA | SPEEDDATA | ZONEDATA | CLOCK | BOOL )\n    ;\n\ninit_\n    : LOCAL? ( CONST | PERS | VAR )\n    ;\n\nexpression\n    : array_ | primitive\n    ;\n\narray_\n    : SQUARE_OPEN (expression COMMA)* expression SQUARE_CLOSE\n    ;\n\nprimitive\n    : BOOLLITERAL\n    | CHARLITERAL\n    | STRINGLITERAL\n    | (PLUS | MINUS)? FLOATLITERAL\n    | (PLUS | MINUS)? INTLITERAL\n    ;","IdentityOfParser":"ANTLRv4Parser.g4","IdentityOfLexer":"ANTLRv4Lexer.g4","Tokens":[18,0,5,1,0,0,53,6,6,1,6,2,19,7,13,1,7,0,53,14,14,1,14,2,2,15,23,1,15,0,32,24,24,1,24,0,53,25,26,1,25,2,12,27,35,3,0,0,53,36,36,3,9,2,2,37,46,3,10,0,53,47,47,3,20,2,40,48,48,3,21,0,53,49,49,3,22,2,2,50,57,3,23,0,32,58,58,3,31,0,53,59,59,3,32,2,36,60,60,3,33,0,53,61,62,3,34,2,5,63,204,5,0,3,53,205,205,8,2,2,5,206,683,9,0,3,53,684,684,19,2,2,5,685,821,20,0,3,53,822,823,27,2,2,2,824,829,29,0,0,53,830,834,29,6,2,29,835,835,30,4,0,53,836,836,30,5,2,2,837,846,30,6,0,53,847,847,30,16,2,1,848,850,30,17,0,53,851,855,30,20,2,32,856,856,31,4,0,53,857,858,31,5,2,2,859,868,33,0,0,53,869,873,33,10,2,29,874,874,34,4,0,53,875,875,34,5,2,1,876,881,34,6,0,53,882,882,34,12,2,2,883,892,34,13,0,53,893,893,34,23,2,1,894,900,34,24,0,53,901,907,34,31,2,2,908,915,35,6,0,53,916,922,35,14,2,1,923,929,36,6,0,42,930,930,36,13,0,53,931,937,36,14,2,1,938,946,37,6,0,53,947,951,37,15,2,32,952,952,38,4,0,53,953,954,38,5,2,2,955,964,40,0,0,53,965,969,40,10,2,29,970,970,41,4,0,53,971,971,41,5,2,1,972,981,41,6,0,53,982,986,41,16,2,45,987,987,42,4,0,53,988,988,42,5,2,2,989,996,42,6,0,53,997,1001,42,14,2,32,1002,1002,43,4,0,53,1003,1004,43,5,2,2,1005,1012,45,0,0,53,1013,1017,45,8,2,29,1018,1018,46,4,0,53,1019,1019,46,5,2,33,1020,1020,46,6,0,1,1021,1027,46,7,0,53,1028,1032,46,14,2,45,1033,1033,47,4,0,53,1034,1034,47,5,2,2,1035,1045,47,6,0,53,1046,1046,47,17,2,1,1047,1053,47,18,0,53,1054,1058,47,25,2,45,1059,1059,48,4,0,53,1060,1060,48,5,2,2,1061,1069,48,6,0,53,1070,1070,48,15,2,1,1071,1077,48,16,0,34,1078,1078,48,23,0,42,1079,1079,48,24,0,53,1080,1084,48,25,2,32,1085,1085,49,4,0,53,1086,1087,49,5,2,2,1088,1096,51,0,0,53,1097,1101,51,9,2,29,1102,1102,52,4,0,53,1103,1103,52,5,2,1,1104,1107,52,6,0,53,1108,1108,52,10,2,2,1109,1116,52,11,0,53,1117,1117,52,19,2,1,1118,1124,52,20,0,53,1125,1131,52,27,2,33,1132,1132,53,6,0,2,1133,1144,53,7,0,53,1145,1145,53,19,2,1,1146,1152,53,20,0,34,1153,1153,53,27,0,42,1154,1154,53,28,0,53,1155,1159,53,29,2,1,1160,1166,54,4,0,53,1167,1171,54,11,2,32,1172,1172,55,4,0,53,1173,1174,55,5,2,2,1175,1182,57,0,0,53,1183,1187,57,8,2,29,1188,1188,58,4,0,53,1189,1189,58,5,2,2,1190,1197,58,6,0,53,1198,1198,58,14,2,2,1199,1211,58,15,0,41,1212,1212,58,28,0,53,1213,1217,58,29,2,32,1218,1218,59,4,0,53,1219,1220,59,5,2,2,1221,1228,61,0,0,53,1229,1233,61,8,2,29,1234,1234,62,4,0,53,1235,1235,62,5,2,1,1236,1245,62,6,0,53,1246,1250,62,16,2,32,1251,1251,63,4,0,53,1252,1253,63,5,2,2,1254,1266,65,0,0,53,1267,1271,65,13,2,29,1272,1272,66,4,0,53,1273,1273,66,5,2,1,1274,1285,66,6,0,53,1286,1286,66,18,2,1,1287,1296,66,19,0,41,1297,1297,66,29,0,53,1298,1298,66,30,2,1,1299,1311,66,31,0,53,1312,1316,66,44,2,32,1317,1317,67,4,0,53,1318,1319,67,5,2,2,1320,1331,69,0,0,53,1332,1336,69,12,2,29,1337,1337,70,4,0,53,1338,1338,70,5,2,1,1339,1348,70,6,0,53,1349,1349,70,16,2,33,1350,1350,70,17,0,2,1351,1367,70,18,0,53,1368,1368,70,35,2,1,1369,1373,70,36,0,34,1374,1374,70,41,0,42,1375,1375,70,42,0,53,1376,1376,70,43,2,2,1377,1393,70,44,0,53,1394,1394,70,61,2,1,1395,1403,70,62,0,53,1404,1408,70,71,2,32,1409,1409,71,4,0,53,1410,1411,71,5,2,2,1412,1428,73,0,0,53,1429,1433,73,17,2,29,1434,1434,74,4,0,53,1435,1435,74,5,2,1,1436,1442,74,6,0,53,1443,1447,74,13,2,45,1448,1448,75,4,0,53,1449,1449,75,5,2,1,1450,1457,75,6,0,53,1458,1462,75,14,2,45,1463,1463,76,4,0,53,1464,1464,76,5,2,2,1465,1473,76,6,0,53,1474,1478,76,15,2,45,1479,1479,77,4,0,53,1480,1480,77,5,2,1,1481,1490,77,6,0,53,1491,1495,77,16,2,32,1496,1496,78,4,0,53,1497,1498,78,5,2,2,1499,1509,80,0,0,53,1510,1514,80,11,2,29,1515,1515,81,4,0,53,1516,1516,81,5,2,2,1517,1521,81,6,0,53,1522,1522,81,11,2,2,1523,1527,81,12,0,53,1528,1528,81,17,2,1,1529,1538,81,18,0,53,1539,1539,81,28,2,33,1540,1540,81,29,0,1,1541,1546,81,30,0,53,1547,1547,81,36,2,2,1548,1557,81,37,0,34,1558,1558,81,47,0,41,1559,1559,81,48,0,53,1560,1560,81,49,2,1,1561,1569,81,50,0,53,1570,1574,81,59,2,32,1575,1575,82,4,0,53,1576,1577,82,5,2,2,1578,1582,84,0,0,53,1583,1587,84,5,2,29,1588,1588,85,4,0,53,1589,1589,85,5,2,33,1590,1590,85,6,0,53,1591,1591,85,7,2,1,1592,1599,85,8,0,53,1600,1600,85,16,2,45,1601,1601,85,17,0,53,1602,1602,85,18,2,1,1603,1610,85,19,0,53,1611,1611,85,27,2,45,1612,1612,85,28,0,53,1613,1613,85,29,2,1,1614,1622,85,30,0,53,1623,1623,85,39,2,45,1624,1624,85,40,0,53,1625,1625,85,41,2,1,1626,1633,85,42,0,53,1634,1634,85,50,2,45,1635,1635,85,51,0,53,1636,1636,85,52,2,1,1637,1641,85,53,0,53,1642,1642,85,58,2,45,1643,1643,85,59,0,53,1644,1644,85,60,2,1,1645,1648,85,61,0,53,1649,1649,85,65,2,34,1650,1650,85,66,0,53,1651,1655,85,67,2,32,1656,1656,86,4,0,53,1657,1658,86,5,2,2,1659,1663,88,0,0,53,1664,1668,88,5,2,29,1669,1669,89,4,0,53,1670,1670,89,5,2,1,1671,1675,89,6,0,41,1676,1676,89,11,0,53,1677,1677,89,12,2,33,1678,1678,89,13,0,53,1679,1679,89,14,2,1,1680,1684,89,15,0,53,1685,1685,89,20,2,45,1686,1686,89,21,0,53,1687,1687,89,22,2,1,1688,1691,89,23,0,53,1692,1692,89,27,2,45,1693,1693,89,28,0,53,1694,1694,89,29,2,1,1695,1697,89,30,0,53,1698,1698,89,33,2,34,1699,1699,89,34,0,53,1700,1704,89,35,2,32,1705,1705,90,4,0,53,1706,1707,90,5,2,2,1708,1717,92,0,0,53,1718,1722,92,10,2,29,1723,1723,93,4,0,53,1724,1724,93,5,2,2,1725,1730,93,6,0,53,1731,1731,93,12,2,45,1732,1732,93,13,0,53,1733,1733,93,14,2,2,1734,1742,93,15,0,53,1743,1747,93,24,2,32,1748,1748,94,4,0,53,1749,1750,94,5,2,2,1751,1756,96,0,0,53,1757,1761,96,6,2,29,1762,1762,97,4,0,53,1763,1763,97,5,2,1,1764,1774,97,6,0,53,1775,1775,97,17,2,33,1776,1776,97,18,0,2,1777,1786,97,19,0,53,1787,1787,97,29,2,1,1788,1792,97,30,0,34,1793,1793,97,35,0,42,1794,1794,97,36,0,53,1795,1795,97,37,2,2,1796,1805,97,38,0,53,1806,1806,97,48,2,1,1807,1818,97,49,0,53,1819,1823,97,61,2,32,1824,1824,98,4,0,53,1825,1826,98,5,2,2,1827,1835,100,0,0,53,1836,1840,100,9,2,29,1841,1841,101,4,0,53,1842,1842,101,5,2,1,1843,1853,101,6,0,53,1854,1858,101,17,2,45,1859,1859,102,4,0,53,1860,1860,102,5,2,1,1861,1871,102,6,0,53,1872,1876,102,17,2,45,1877,1877,103,4,0,53,1878,1878,103,5,2,1,1879,1891,103,6,0,53,1892,1896,103,19,2,45,1897,1897,104,4,0,53,1898,1898,104,5,2,33,1899,1899,104,6,0,1,1900,1903,104,7,0,53,1904,1904,104,11,2,45,1905,1905,104,12,0,53,1906,1906,104,13,2,1,1907,1911,104,14,0,34,1912,1912,104,19,0,41,1913,1913,104,20,0,53,1914,1914,104,21,2,1,1915,1926,104,22,0,53,1927,1931,104,34,2,45,1932,1932,105,4,0,53,1933,1933,105,5,2,33,1934,1934,105,6,0,1,1935,1938,105,7,0,53,1939,1939,105,11,2,45,1940,1940,105,12,0,53,1941,1941,105,13,2,1,1942,1946,105,14,0,34,1947,1947,105,19,0,41,1948,1948,105,20,0,53,1949,1949,105,21,2,1,1950,1959,105,22,0,53,1960,1964,105,32,2,32,1965,1965,106,4,0,-1,1966,1965,106,5,0],"ModeNames":["DEFAULT_MODE","Argument","TargetLanguageAction","LexerCharSet"],"ChannelNames":["DEFAULT_TOKEN_CHANNEL","HIDDEN","OFF_CHANNEL","COMMENT"],"LiteralNames":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"\u0027import\u0027","\u0027fragment\u0027","\u0027lexer\u0027","\u0027parser\u0027","\u0027grammar\u0027","\u0027protected\u0027","\u0027public\u0027","\u0027private\u0027","\u0027returns\u0027","\u0027locals\u0027","\u0027throws\u0027","\u0027catch\u0027","\u0027finally\u0027","\u0027mode\u0027"],"SymbolicNames":[null,"TOKEN_REF","RULE_REF","LEXER_CHAR_SET","DOC_COMMENT","BLOCK_COMMENT","LINE_COMMENT","INT","STRING_LITERAL","UNTERMINATED_STRING_LITERAL","BEGIN_ARGUMENT","BEGIN_ACTION","OPTIONS","TOKENS","CHANNELS","IMPORT","FRAGMENT","LEXER","PARSER","GRAMMAR","PROTECTED","PUBLIC","PRIVATE","RETURNS","LOCALS","THROWS","CATCH","FINALLY","MODE","COLON","COLONCOLON","COMMA","SEMI","LPAREN","RPAREN","LBRACE","RBRACE","RARROW","LT","GT","ASSIGN","QUESTION","STAR","PLUS_ASSIGN","PLUS","OR","DOLLAR","RANGE","DOT","AT","POUND","NOT","ID","WS","ERRCHAR","END_ARGUMENT","UNTERMINATED_ARGUMENT","ARGUMENT_CONTENT","END_ACTION","UNTERMINATED_ACTION","ACTION_CONTENT","UNTERMINATED_CHAR_SET"],"LexerRuleNames":["DOC_COMMENT","BLOCK_COMMENT","LINE_COMMENT","INT","STRING_LITERAL","UNTERMINATED_STRING_LITERAL","BEGIN_ARGUMENT","BEGIN_ACTION","OPTIONS","TOKENS","CHANNELS","WSNLCHARS","IMPORT","FRAGMENT","LEXER","PARSER","GRAMMAR","PROTECTED","PUBLIC","PRIVATE","RETURNS","LOCALS","THROWS","CATCH","FINALLY","MODE","COLON","COLONCOLON","COMMA","SEMI","LPAREN","RPAREN","LBRACE","RBRACE","RARROW","LT","GT","ASSIGN","QUESTION","STAR","PLUS_ASSIGN","PLUS","OR","DOLLAR","RANGE","DOT","AT","POUND","NOT","ID","WS","ERRCHAR","Ws","Hws","Vws","BlockComment","DocComment","LineComment","EscSeq","EscAny","UnicodeEsc","DecimalNumeral","HexDigit","DecDigit","BoolLiteral","CharLiteral","SQuoteLiteral","DQuoteLiteral","USQuoteLiteral","NameChar","NameStartChar","Int","Esc","Colon","DColon","SQuote","DQuote","LParen","RParen","LBrace","RBrace","LBrack","RBrack","RArrow","Lt","Gt","Equal","Question","Star","Plus","PlusAssign","Underscore","Pipe","Dollar","Comma","Semi","Dot","Range","At","Pound","Tilde","NESTED_ARGUMENT","ARGUMENT_ESCAPE","ARGUMENT_STRING_LITERAL","ARGUMENT_CHAR_LITERAL","END_ARGUMENT","UNTERMINATED_ARGUMENT","ARGUMENT_CONTENT","NESTED_ACTION","ACTION_ESCAPE","ACTION_STRING_LITERAL","ACTION_CHAR_LITERAL","ACTION_DOC_COMMENT","ACTION_BLOCK_COMMENT","ACTION_LINE_COMMENT","END_ACTION","UNTERMINATED_ACTION","ACTION_CONTENT","LEXER_CHAR_SET_BODY","LEXER_CHAR_SET","UNTERMINATED_CHAR_SET","Id"],"TokenTypeMap":["TOKEN_REF",1,"RULE_REF",2,"LEXER_CHAR_SET",3,"DOC_COMMENT",4,"BLOCK_COMMENT",5,"LINE_COMMENT",6,"INT",7,"STRING_LITERAL",8,"UNTERMINATED_STRING_LITERAL",9,"BEGIN_ARGUMENT",10,"BEGIN_ACTION",11,"OPTIONS",12,"TOKENS",13,"CHANNELS",14,"\u0027import\u0027",15,"IMPORT",15,"\u0027fragment\u0027",16,"FRAGMENT",16,"\u0027lexer\u0027",17,"LEXER",17,"\u0027parser\u0027",18,"PARSER",18,"\u0027grammar\u0027",19,"GRAMMAR",19,"\u0027protected\u0027",20,"PROTECTED",20,"\u0027public\u0027",21,"PUBLIC",21,"\u0027private\u0027",22,"PRIVATE",22,"\u0027returns\u0027",23,"RETURNS",23,"\u0027locals\u0027",24,"LOCALS",24,"\u0027throws\u0027",25,"THROWS",25,"\u0027catch\u0027",26,"CATCH",26,"\u0027finally\u0027",27,"FINALLY",27,"\u0027mode\u0027",28,"MODE",28,"COLON",29,"COLONCOLON",30,"COMMA",31,"SEMI",32,"LPAREN",33,"RPAREN",34,"LBRACE",35,"RBRACE",36,"RARROW",37,"LT",38,"GT",39,"ASSIGN",40,"QUESTION",41,"STAR",42,"PLUS_ASSIGN",43,"PLUS",44,"OR",45,"DOLLAR",46,"RANGE",47,"DOT",48,"AT",49,"POUND",50,"NOT",51,"ID",52,"WS",53,"ERRCHAR",54,"END_ARGUMENT",55,"UNTERMINATED_ARGUMENT",56,"ARGUMENT_CONTENT",57,"END_ACTION",58,"UNTERMINATED_ACTION",59,"ACTION_CONTENT",60,"UNTERMINATED_CHAR_SET",61,"EOF",-1],"ParserRuleNames":["grammarSpec","grammarDecl","grammarType","prequelConstruct","optionsSpec","option","optionValue","delegateGrammars","delegateGrammar","tokensSpec","channelsSpec","idList","action_","actionScopeName","actionBlock","argActionBlock","modeSpec","rules","ruleSpec","parserRuleSpec","exceptionGroup","exceptionHandler","finallyClause","rulePrequel","ruleReturns","throwsSpec","localsSpec","ruleAction","ruleModifiers","ruleModifier","ruleBlock","ruleAltList","labeledAlt","lexerRuleSpec","lexerRuleBlock","lexerAltList","lexerAlt","lexerElements","lexerElement","labeledLexerElement","lexerBlock","lexerCommands","lexerCommand","lexerCommandName","lexerCommandExpr","altList","alternative","element","labeledElement","ebnf","blockSuffix","ebnfSuffix","lexerAtom","atom","notSet","blockSet","setElement","block","ruleref","characterRange","terminal","elementOptions","elementOption","identifier"]}]
Type 2 errors:
line 85 col 6 "(TOOLDATA|WOBJDATA|SPEEDDATA|ZONEDATA|CLOCK|BOOL)"
