
( grammarSpec
  ( grammarDecl
    ( grammarType
      ( GRAMMAR i=0 txt=grammar tt=19 DEFAULT_TOKEN_CHANNEL
    ) ) 
    ( identifier
      ( TOKEN_REF i=8 txt=A tt=1 DEFAULT_TOKEN_CHANNEL
    ) ) 
    ( SEMI i=9 txt=; tt=32 DEFAULT_TOKEN_CHANNEL
  ) ) 
  ( rules
    ( ruleSpec
      ( parserRuleSpec
        ( RULE_REF i=12 txt=s tt=2 DEFAULT_TOKEN_CHANNEL
        ) 
        ( COLON i=14 txt=: tt=29 DEFAULT_TOKEN_CHANNEL
        ) 
        ( ruleBlock
          ( ruleAltList
            ( labeledAlt
              ( alternative
                ( element
                  ( atom
                    ( ruleref
                      ( RULE_REF i=16 txt=e tt=2 DEFAULT_TOKEN_CHANNEL
        ) ) ) ) ) ) ) ) 
        ( SEMI i=18 txt=; tt=32 DEFAULT_TOKEN_CHANNEL
        ) 
        ( exceptionGroup
    ) ) ) 
    ( ruleSpec
      ( parserRuleSpec
        ( RULE_REF i=21 txt=e tt=2 DEFAULT_TOKEN_CHANNEL
        ) 
        ( COLON i=23 txt=: tt=29 DEFAULT_TOKEN_CHANNEL
        ) 
        ( ruleBlock
          ( ruleAltList
            ( labeledAlt
              ( alternative
                ( element
                  ( atom
                    ( ruleref
                      ( RULE_REF i=25 txt=e tt=2 DEFAULT_TOKEN_CHANNEL
                ) ) ) ) 
                ( element
                  ( atom
                    ( terminal
                      ( STRING_LITERAL i=27 txt='*' tt=8 DEFAULT_TOKEN_CHANNEL
                ) ) ) ) 
                ( element
                  ( atom
                    ( ruleref
                      ( RULE_REF i=31 txt=e tt=2 DEFAULT_TOKEN_CHANNEL
            ) ) ) ) ) ) 
            ( OR i=33 txt=| tt=45 DEFAULT_TOKEN_CHANNEL
            ) 
            ( labeledAlt
              ( alternative
                ( element
                  ( atom
                    ( terminal
                      ( TOKEN_REF i=35 txt=INT tt=1 DEFAULT_TOKEN_CHANNEL
        ) ) ) ) ) ) ) ) 
        ( SEMI i=39 txt=; tt=32 DEFAULT_TOKEN_CHANNEL
        ) 
        ( exceptionGroup
    ) ) ) 
    ( ruleSpec
      ( lexerRuleSpec
        ( TOKEN_REF i=42 txt=INT tt=1 DEFAULT_TOKEN_CHANNEL
        ) 
        ( COLON i=46 txt=: tt=29 DEFAULT_TOKEN_CHANNEL
        ) 
        ( lexerRuleBlock
          ( lexerAltList
            ( lexerAlt
              ( lexerElements
                ( lexerElement
                  ( lexerAtom
                    ( LEXER_CHAR_SET i=48 txt=[0-9] tt=3 DEFAULT_TOKEN_CHANNEL
                  ) ) 
                  ( ebnfSuffix
                    ( PLUS i=53 txt=+ tt=44 DEFAULT_TOKEN_CHANNEL
        ) ) ) ) ) ) ) 
        ( SEMI i=55 txt=; tt=32 DEFAULT_TOKEN_CHANNEL
    ) ) ) 
    ( ruleSpec
      ( lexerRuleSpec
        ( TOKEN_REF i=58 txt=WS tt=1 DEFAULT_TOKEN_CHANNEL
        ) 
        ( COLON i=61 txt=: tt=29 DEFAULT_TOKEN_CHANNEL
        ) 
        ( lexerRuleBlock
          ( lexerAltList
            ( lexerAlt
              ( lexerElements
                ( lexerElement
                  ( lexerAtom
                    ( LEXER_CHAR_SET i=63 txt=[ \\t\\n] tt=3 DEFAULT_TOKEN_CHANNEL
                  ) ) 
                  ( ebnfSuffix
                    ( PLUS i=70 txt=+ tt=44 DEFAULT_TOKEN_CHANNEL
              ) ) ) ) 
              ( lexerCommands
                ( RARROW i=72 txt=-> tt=37 DEFAULT_TOKEN_CHANNEL
                ) 
                ( lexerCommand
                  ( lexerCommandName
                    ( identifier
                      ( RULE_REF i=75 txt=skip tt=2 DEFAULT_TOKEN_CHANNEL
        ) ) ) ) ) ) ) ) 
        ( SEMI i=80 txt=; tt=32 DEFAULT_TOKEN_CHANNEL
  ) ) ) ) 
  ( EOF i=83 txt= tt=-1 DEFAULT_TOKEN_CHANNEL
) ) 


